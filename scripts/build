#!/usr/bin/env bash

# determine the project directory based on the location of this script
MYSELF="$(basename -- "${BASH_SOURCE[0]}")"
SCRIPTDIR="$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &>/dev/null && pwd)"
PROJDIR="$(dirname "${SCRIPTDIR}")"

# update build system just in case
cd "${PROJDIR}"
#premake5 gmake2 || exit 1

cd "${PROJDIR}/build"

platforms=all
configs=release

function usage {
	printf "usage: %s [-c release|debug|all] [-p mac|web|all]\n" "${MYSELF}"
	exit 1
}

while getopts "c:p:" option
do
	case "${option}" in
		c)
			configs="${OPTARG}"
			if [ "${configs}" != "release" -a "${configs}" != "debug" -a "${configs}" != "all"]
			then
				usage
			fi
			;;
		p)
			platforms="${OPTARG}"
			if [ "${platforms}" != "mac" -a "${platforms}" != "web" -a "${platforms}" != "all"]
			then
				usage
			fi
			;;
		*)
			usage
			;;
	esac
done
shift $(($OPTIND - 1))

if [ "${configs}" == "all" ]
then
	configs="release debug"
fi
if [ "${platforms}" == "all" ]
then
	platforms="web mac"
fi

for platform in ${platforms}
do
	echo "building platform ${platform}..."
	if [ "${platform}" == "web" ]
	then
		cmd="emmake make"
	else
		cmd="make"
	fi

	for config in ${configs}
	do
		echo "    building configuration ${config}..."
		mkconfig="${config}_${platform}"

		${cmd} -j config=${mkconfig} $@
		ret=$?
		if [ ${ret} -ne 0 ]
		then
			exit ${ret}
		fi
	done
done
